

import time
import msg
import onOff


set type @mono
set message message1
set switch switch1


// for test, to delete
isOn = onOff.isOn(switch, message)
if isOn == false
    msg.printAndWait("[yellow] unflag is turn off", message)
    end


ubind type
set startTime @time
sensor botFlag @unit @flag

if @unit == false
    msg.printAndWait("no bots of that type", message)
    end


if botFlag == 0
    end

set botsQuantity 24
set count 0

#ref waitingOwner

ubind type

sensor flag @unit @flag
if flag != botFlag
    add count count 1
    if count > botsQuantity
        print "[yellow] bot with flag "
        print botFlag
        msg.printAndWait(" does not exist anymore", message)
        end
    jump waitingOwner  // searching for the good idBot


sensor owner @unit @controller
sensor botType owner @type


// if controller is not player or proc, return type
if botType == type
    // bot not controled by processors or players, it return itself

    print "flagged bot found, no owner ? waiting owner of bot id: "
    msg.printAndWait(flag, message)
    op sub waiting @time startTime  // waiting = @time - startTime
    if waiting > 5000  // 1000 -> 1 secondes
        ucontrol flag 0 null null null null
        msg.printAndWait("flagged bot found, have waited 5s, had free him", message)
        end
    msg.printAndWait("waiting manifestation of owner ...", message)
    jump waitingOwner

elif owner == @this
    msg.printAndWait("It's me ! Mario", message)
    if waiting > 5000
        ucontrol flag 0 null null null null
        msg.printAndWait("[green] have waited 3s, free him", message)
        end
    jump waitingOwner

else
    msg.printAndWait("flagged bot is owned, everything alright", message)


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPlusMinusleftMultiplyDivideArobasedInfo AsmOperation Divide EndProg Equal False FunReturn Function GreaterThan GreaterThanOrEqual If Indent Jump LPAREN LowerThan LowerThanOrEqual Minus Multiply NotEqual Number Plus RPAREN RefJump StrictEqual True Variablelines : linelines : lines lineline : jump\n            | asmLine\n    line : noLinenoLine : RefJump Indentjump : Jump Variable condition Indentcondition : TrueasmLine : asmFollowInstructions IndentasmFollowInstructions : asmFollowInstruasmFollowInstructions : asmFollowInstructions asmFollowInstru\n    asmFollowInstru : Variable\n                       | Number\n                       | ArobasedInfo\n    '
    
_lr_action_items = {'Jump':([0,1,2,3,4,5,13,15,17,20,],[6,6,-1,-3,-4,-5,-2,-9,-6,-7,]),'RefJump':([0,1,2,3,4,5,13,15,17,20,],[9,9,-1,-3,-4,-5,-2,-9,-6,-7,]),'Variable':([0,1,2,3,4,5,6,7,8,10,11,12,13,15,16,17,20,],[7,7,-1,-3,-4,-5,14,-12,7,-10,-13,-14,-2,-9,-11,-6,-7,]),'Number':([0,1,2,3,4,5,7,8,10,11,12,13,15,16,17,20,],[11,11,-1,-3,-4,-5,-12,11,-10,-13,-14,-2,-9,-11,-6,-7,]),'ArobasedInfo':([0,1,2,3,4,5,7,8,10,11,12,13,15,16,17,20,],[12,12,-1,-3,-4,-5,-12,12,-10,-13,-14,-2,-9,-11,-6,-7,]),'$end':([1,2,3,4,5,13,15,17,20,],[0,-1,-3,-4,-5,-2,-9,-6,-7,]),'Indent':([7,8,9,10,11,12,16,18,19,],[-12,15,17,-10,-13,-14,-11,20,-8,]),'True':([14,],[19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lines':([0,],[1,]),'line':([0,1,],[2,13,]),'jump':([0,1,],[3,3,]),'asmLine':([0,1,],[4,4,]),'noLine':([0,1,],[5,5,]),'asmFollowInstructions':([0,1,],[8,8,]),'asmFollowInstru':([0,1,8,],[10,10,16,]),'condition':([14,],[18,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> lines","S'",1,None,None,None),
  ('lines -> line','lines',1,'p_lines_one','mainYacc.py',52),
  ('lines -> lines line','lines',2,'p_lines_many','mainYacc.py',57),
  ('line -> jump','line',1,'p_line','mainYacc.py',62),
  ('line -> asmLine','line',1,'p_line','mainYacc.py',63),
  ('line -> noLine','line',1,'p_lines_empty','mainYacc.py',69),
  ('noLine -> RefJump Indent','noLine',2,'p_ref','mainYacc.py',73),
  ('jump -> Jump Variable condition Indent','jump',4,'p_jump','mainYacc.py',77),
  ('condition -> True','condition',1,'p_condition','mainYacc.py',81),
  ('asmLine -> asmFollowInstructions Indent','asmLine',2,'p_asmLine','mainYacc.py',86),
  ('asmFollowInstructions -> asmFollowInstru','asmFollowInstructions',1,'p_asmFollowInstructions_one','mainYacc.py',91),
  ('asmFollowInstructions -> asmFollowInstructions asmFollowInstru','asmFollowInstructions',2,'p_asmFollowInstructions_many','mainYacc.py',96),
  ('asmFollowInstru -> Variable','asmFollowInstru',1,'p_asmFollowInstru','mainYacc.py',102),
  ('asmFollowInstru -> Number','asmFollowInstru',1,'p_asmFollowInstru','mainYacc.py',103),
  ('asmFollowInstru -> ArobasedInfo','asmFollowInstru',1,'p_asmFollowInstru','mainYacc.py',104),
]
